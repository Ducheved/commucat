name: Release

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

env:
  CARGO_TERM_COLOR: always

jobs:
  publish:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Install cargo-edit
        run: cargo install cargo-edit --locked

      - name: Compute version
        id: meta
        run: |
          COUNT=$(git rev-list --count HEAD)
          VERSION="1.0.${COUNT}"
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"

      - name: Create tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          TAG="v${{ steps.meta.outputs.version }}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "tag $TAG already exists"
          else
            git tag "$TAG"
            git push origin "$TAG"
          fi

      - name: Apply workspace version
        run: cargo set-version --workspace ${{ steps.meta.outputs.version }}

      - name: Tests before publish
        run: cargo test --workspace --all-features

      - name: Publish crates
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: |
          set -euo pipefail
          for manifest in \
            crates/proto/Cargo.toml \
            crates/crypto/Cargo.toml \
            crates/federation/Cargo.toml \
            crates/storage/Cargo.toml \
            crates/ledger/Cargo.toml
          do
            cargo publish --allow-dirty --manifest-path "$manifest"
            # give crates.io a moment to ingest the upload
            sleep 20
          done

      - name: Build release binary
        run: cargo build --release -p commucat-server

      - name: Package binary
        run: |
          mkdir -p dist
          cp target/release/commucat-server dist/
          strip dist/commucat-server || true
          cp README.md dist/README.md
          tar -czf commucat-server-linux-amd64.tar.gz -C dist commucat-server README.md

      - name: Publish GitHub release asset
        uses: softprops/action-gh-release@v2
        with:
          files: commucat-server-linux-amd64.tar.gz
          tag_name: v${{ steps.meta.outputs.version }}
          generate_release_notes: true

      - name: Summary
        run: |
          echo "Published crates at version ${{ steps.meta.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "Release tarball: commucat-server-linux-amd64.tar.gz" >> $GITHUB_STEP_SUMMARY
