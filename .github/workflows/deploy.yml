name: Deploy

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (e.g. 1.0.42). Leave empty to use inferred tag."
        required: false
  workflow_run:
    workflows: ["Release"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_sha || github.ref }}

      - name: Resolve version
        id: meta
        run: |
          if [ "${{ github.event_name }}" = "workflow_run" ]; then
            COUNT=$(git rev-list --count HEAD)
            VERSION="1.0.${COUNT}"
            echo "version=${VERSION}" >> "$GITHUB_OUTPUT"
          elif [ -n "${{ github.event.inputs.version }}" ]; then
            echo "version=${{ github.event.inputs.version }}" >> "$GITHUB_OUTPUT"
          else
            COUNT=$(git rev-list --count HEAD)
            VERSION="1.0.${COUNT}"
            echo "version=${VERSION}" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Build release binaries
        run: cargo build --release -p commucat-server -p commucat-cli

      - name: Package artifact
        run: |
          VERSION="${{ steps.meta.outputs.version }}"
          PACKAGE="commucat-bundle-${VERSION}.tar.gz"
          mkdir -p dist/bin
          cp target/release/commucat-server dist/bin/
          cp target/release/commucat-cli dist/bin/
          strip dist/bin/commucat-server dist/bin/commucat-cli || true
          tar -czf "$PACKAGE" -C dist .

      - name: Upload bundle to host
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.PROD_SSH_HOST }}
          username: ${{ secrets.PROD_SSH_USER }}
          password: ${{ secrets.PROD_SSH_PASSWORD }}
          source: commucat-bundle-${{ steps.meta.outputs.version }}.tar.gz
          target: /home/${{ secrets.PROD_SSH_USER }}/releases
          overwrite: true
          strip_components: 0

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.PROD_SSH_HOST }}
          username: ${{ secrets.PROD_SSH_USER }}
          password: ${{ secrets.PROD_SSH_PASSWORD }}
          script_stop: true
          script: |
            set -euo pipefail
            VERSION="${{ steps.meta.outputs.version }}"
            SUDO_PASSWORD='${{ secrets.PROD_SSH_PASSWORD }}'
            mkdir -p ~/releases ~/bin
            tar -xzf ~/releases/commucat-bundle-${VERSION}.tar.gz -C ~/releases
            install -Dm755 ~/releases/bin/commucat-server ~/bin/commucat-server
            install -Dm755 ~/releases/bin/commucat-cli ~/bin/commucat-cli
            rm -f ~/releases/commucat-bundle-${VERSION}.tar.gz
            printf '%s\n' "$SUDO_PASSWORD" | sudo -S -p '' systemctl restart commucat

      - name: Summary
        run: |
          echo "Deployed commucat-server version ${{ steps.meta.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "Host: ${{ secrets.PROD_SSH_HOST }}" >> $GITHUB_STEP_SUMMARY
