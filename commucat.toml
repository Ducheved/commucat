# CommuCat configuration template — all supported keys

[server]
# TLS listener (HTTP/2 upgrade endpoint)
bind = "0.0.0.0:8443"
# X.509 certificate / key (PEM)
tls_cert = "certs/server.crt"
tls_key = "certs/server.key"
# Public domain (CN/SAN must match)
domain = "example.org"
# Auto-approve newly seen devices (Noise static key in database)
auto_approve_devices = true
# Max devices per user when auto-approval is enabled (0 disables auto-approval)
max_auto_devices_per_user = 5
# TCP keep-alive interval in seconds
keepalive = 60

[storage]
# PostgreSQL connection string
postgres_dsn = "postgres://commucat:commucat@localhost:5432/commucat"
# Redis for presence + rendezvous cache
redis_url = "redis://127.0.0.1:6379"

[crypto]
# Noise static key pair (hex)
noise_private = "000102030405060708090a0b0c0d0e0f000102030405060708090a0b0c0d0e0f"
noise_public  = "101112131415161718191a1b1c1d1e1f101112131415161718191a1b1c1d1e1f"
# Federation signing seed (ed25519) — 32 bytes hex
federation_seed = "202122232425262728292a2b2c2d2e2f202122232425262728292a2b2c2d2e2f"
# Optional Noise prologue (bytes)
prologue = "commucat"

[federation]
# Semicolon-separated list of domain,endpoint,public_key(32 B hex)
peers = "remote.example,https://remote.example/federation,303132333435363738393a3b3c3d3e3f303132333435363738393a3b3c3d3e3f;another.example,https://another.example/fed,aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"

[ledger]
# null|debug|file — debug prints to stdout; file appends JSON lines
mode = "file"
# Optional path for file adapter (ignored for null/debug)
target = "var/log/commucat-ledger.jsonl"

[limits]
# Seconds before presence records expire
presence_ttl = 30
# Seconds before queued relay messages expire
relay_ttl = 86400
# Pairing token lifetime (seconds)
pairing_ttl = 300

[uploads]
# Directory for uploaded files (avatars, etc.)
dir = "var/uploads"
# Base URL for uploaded files (optional, defaults to https://{domain}/uploads)
# base_url = "https://cdn.example.org/uploads"

[security.rate_limit]
# Burst size for generic HTTP endpoints
http_burst = 60
# Time window for generic HTTP rate limiting (milliseconds)
http_window_ms = 1000
# Penalty window when generic HTTP limit is exceeded (milliseconds)
http_penalty_ms = 10000
# Burst for Noise /connect handshakes
connect_burst = 20
# Time window for /connect rate limiting (milliseconds)
connect_window_ms = 1000
# Penalty window for /connect rate limiting (milliseconds)
connect_penalty_ms = 30000
# Burst for pairing claim attempts
pairing_burst = 5
# Time window for pairing claim rate limiting (milliseconds)
pairing_window_ms = 60000
# Penalty window for pairing claim rate limiting (milliseconds)
pairing_penalty_ms = 120000

[security.rotation]
# Hours between automatic Noise static key rotations
noise_interval_hours = 168
# Grace hours to keep previous Noise key active
noise_grace_hours = 48
# Number of Noise key versions to keep active
noise_max_versions = 3
# Enable automatic rotation of admin token
admin_enabled = true
# Hours between administrative token rotations
admin_interval_hours = 168
# Grace hours for old administrative tokens
admin_grace_hours = 72
# Number of administrative tokens to keep active
admin_max_versions = 2

[rotation.device]
# Enable device CSR auto-rotation service
enabled = true
# Minimum seconds between successive rotations for the same device
min_interval = 86400
# Maximum lifetime of CSR proof signatures (seconds)
proof_ttl = 600
# CCP channel used for KeyUpdate notifications
notify_channel = 0

[admin]
# Optional bearer token for /api/security-stats and /metrics
token = "replace-with-secret"

[transport]
# REALITY / XRay transport material (optional)
reality_cert = "certs/reality.pem"
reality_fingerprint = "0dc9ec3e2457782fab76e8debad009d12a69220df895d0ef3c3e8c6323599b9b"
